<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\block\Entity\Block;
use Drupal\Core\Url;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 *
 * Example on how to alter theme settings form
 */
function silvi_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_form_alter().
 */
function silvi_barrio_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_pass') {
    $form['name']['#title'] = t('Username');
    $form['forgot_password_form_title'] = [
      '#type' => 'item',
      '#title' => '',
      '#weight' => -1,
      '#markup' => '
        <div class="user-form-title">' . t('Forgot Password') . '</div>
      ',
    ];
  }
  if ($form_id == 'user_login_form') {
    $form['login_form_title'] = [
      '#type' => 'item',
      '#title' => '',
      '#weight' => -1,
      '#markup' => '
        <div class="user-form-title">' . t('Login') . '</div>
      ',
    ];
    // Add reset password link.
    $url_object = Url::fromRoute('user.pass');
    $form['actions']['password_reset_link'] = [
      '#type' => 'link',
      '#url' => $url_object,
      '#title' => t('Forgot password?'),
      '#attributes' => [
        'class' => ['user-reset-password-link'],
      ],
    ];
  }
}

/**
 * Implements hook_theme_suggestions_block_alter().
 * Region suggestion for blocks in Drupal.
 */
function silvi_barrio_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['#id'])) {
    if ($block = Block::load($variables["elements"]["#id"])) {
      $region = $block->getRegion();
      $suggestions[] = 'block__' . $region;
      $suggestions[] = 'block__' . $region . '__' . $variables['elements']['#base_plugin_id'];
      $suggestions[] = 'block__' . $region . '__' . $variables['elements']['#id'];
      $suggestions[] = 'block__' . $region . '__' . $variables['elements']['#base_plugin_id'] . '__' . $variables['elements']['#id'];
    }
  }
}

/**
 * Implements hook_theme_suggestions_view_alter().
 */
function silvi_barrio_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $suggestions = [];
  $view = $variables['view'];

  $suggestions[] = 'views_view__' . $view->id();
  $suggestions[] = 'views_view__' . $view->current_display;
  $suggestions[] = 'views_view__' . $view->id() . '__' . $view->current_display;
}
